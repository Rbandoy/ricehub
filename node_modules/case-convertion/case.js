let cases = {};

cases.data_to_snake_case = (string, overwrites = {}) => {
  if (overwrites[string]) return overwrites[string]

  if (string.match(/^[A-Z]*$/)) return string.toLowerCase()

  let snakeCase = string
  .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)
  .map(x => x.toLowerCase())
  .join('_');

  if (snakeCase.startsWith('_')) snakeCase = snakeCase.slice(1)
   
  return snakeCase
}

cases.SnakeCaseToCamelCase = (string, overwrites = {}) => {
  if (overwrites[string]) return overwrites[string]

  if (string.match(/^[A-Z]*$/)) return string.toLowerCase()

  string = string.replace( /([-_]\w)/g, g => g[ 1 ].toUpperCase() );
   
  return string
}

module.exports = {...cases};