
const { data_to_snake_case, SnakeCaseToCamelCase } = require("./case");

const isDate = (date) => (date instanceof Date);

const isObject = (data) => (typeof data === 'object' && !Array.isArray(data) && data !== null)

const isArray = (data) => Array.isArray(data)

const isString = (data) => typeof data === "string";

let convert = {};

convert.convert_to_snake_case = (data, overwrites) => {
  if (isDate(data)) return data
 
  if (isString(data)) return data_to_snake_case(data);
  
  if (isArray(data)) return data.map((item) => convert.convert_to_snake_case(item, overwrites))

  if (isObject(data)) {
    const newData = {}

    Object.keys(data).forEach((key) => {
      const snakeKey = data_to_snake_case(key, overwrites)
      newData[snakeKey] = convert.convert_to_snake_case(data[key], overwrites)
    })
    return newData
  }
  return data
}

convert.SnakeCaseToCamelCase = (data, overwrites) => {
  if (isDate(data)) return data
  
  if (isString(data)) return SnakeCaseToCamelCase(data);

  if (isArray(data)) return data.map((item) => convert.SnakeCaseToCamelCase(item, overwrites))

  if (isObject(data)) {
    const newData = {}

    Object.keys(data).forEach((key) => {
      const snakeKey = SnakeCaseToCamelCase(key, overwrites)
      newData[snakeKey] = convert.SnakeCaseToCamelCase(data[key], overwrites)
    })
    return newData
  }
  return data
}

module.exports = { ...convert }

 